// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  idUsuario Int     @id @default(autoincrement())
  nome      String  @db.VarChar(30)
  email     String  @unique @db.VarChar(255)
  senha     String  @db.VarChar(255)
  isAdmin   Boolean
}

model Campeonato {
  idCampeonato     Int      @id @default(autoincrement())
  inicio           DateTime
  fim              DateTime
  inicioInscricoes DateTime
  fimInscricoes    DateTime
  duplas           Dupla[]
  layouts          Layout[]
}

model Participante {
  idParticipante Int            @id @default(autoincrement())
  nome           String         @db.VarChar(50)
  telefone       String         @db.Char(11) @unique
  duplas         DuplaJogador[]
}

model Dupla {
  idDupla   Int            @id @default(autoincrement())
  jogadores DuplaJogador[]

  Campeonato   Campeonato @relation(fields: [idCampeonato], references: [idCampeonato])
  idCampeonato Int
}

model DuplaJogador {
  id Int @id @default(autoincrement())

  jogador   Participante @relation(fields: [idJogador], references: [idParticipante])
  idJogador Int

  dupla   Dupla @relation(fields: [idDupla], references: [idDupla])
  idDupla Int

  idCampeonato Int

  @@unique([idDupla, idJogador])
  @@unique([idCampeonato, idJogador])
}

model Partida {
  idMatch Int @id @default(autoincrement())
}

// Layouts edit√°veis (ex.: finais) persistidos como JSON
model Layout {
  idLayout      Int         @id @default(autoincrement())
  stage         String      @db.VarChar(32) // e.g., 'finais', 'classificatoria'
  data          Json
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  // Escopo por campeonato (opcional para permitir presets globais)
  campeonato    Campeonato? @relation(fields: [idCampeonato], references: [idCampeonato])
  idCampeonato  Int?

  @@unique([stage, idCampeonato])
}
